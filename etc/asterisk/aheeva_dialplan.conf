
; -------------------------------------------------------------------------------------
; -------------------------------------------------------------------------------------
; ----------------------------< AHEEVA DIALPLAN SECTION >------------------------------
; -------------------------------------------------------------------------------------
; -------------------------------------------------------------------------------------


[agentbarge]
exten => h,1,Hangup

exten => _AB.,1,Answer
exten => _AB.,n,AgentBarge(${EXTEN:2})
exten => _AB.,n,Hangup

exten => ${AH_BARGE_EXTEN},1,Ringing
exten => ${AH_BARGE_EXTEN},n,Answer
exten => ${AH_BARGE_EXTEN},n,AgentBarge()
exten => ${AH_BARGE_EXTEN},n,Hangup

;Esto lo uso para llamadas manuales
[agents]
; Requests coming from the StarPhone
exten => _AH.,1,AgentLogin(${EXTEN:2},s)

exten => _AGTCALL.,1,NoOp(Consult Call for ${EXTEN:7})
exten => _AGTCALL.,n,AhConsultCallDistribute(${EXTEN:7}|30|1)
;exten => _X.,1,Dial(IAX2/sipauto-ventas-/${EXTEN})
exten => _X.,1,Dial(IAX2/iax_sipdialer_peer/${EXTEN},300,T)
;exten => _X.,1,Dial(IAX2/asterisk-new/${EXTEN},300,T)

exten => _AGTCALL.,n,Hangup

exten => _MCALL.,1,Set(AH_TEMP=${EXTEN:5})
exten => _MCALL.,2,Noop([${AH_TEMP}])
exten => _MCALL.,3,Set(AH_EXTEN=${CUT(AH_TEMP,^,1)})
exten => _MCALL.,4,Set(AHEEVA_TRACKNUM=${CUT(AH_TEMP,^,2)})
exten => _MCALL.,5,Goto(agents,${AH_EXTEN},1)

exten => h,1,GotoIf($["${DIALSTATUS}" = "ANSWER"]?3:2)
exten => h,n,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,n,Hangup

exten => _77.,n,Dial(IAX2/iax_r2/${EXTEN},20,tTwW)

;This is when an agent dials a wrong number
include => agent_wrong_number
[agent_wrong_number]

exten => _X.,1,Answer
exten => _X.,n,Playback(you-dialed-wrong-number)
exten => _X.,n,Hangup

[aheeva]
include => ccsr
include => agentbarge

;this include should always be at the bottom
include => agents


;to start a SBR do something like this
;exten => 88000,1,Goto(aheeva_sbr,s^DNID=${EXTEN}^RDNIS=${EXTEN},1)

;Aheeva Skill based Routing
[aheeva_sbr]

; To allow to use in outbound calls
; Setting phone number and record id to a NoOp terminate
exten => s,1,Set(AH_PHONE_NUMBER=0)
exten => s,n,Set(AH_RECORDID=0)
exten => s,n,Set(CALLERID(name)=${CUT(CALLERID(name)|&|1)}${CUT(CALLERID(name)|&|2)})
exten => s,n,AHEventsProxy(MSG_TYPE_SBR_ROUTING_REQUEST)
exten => s,n,NoOp(aheeva_sbr-${SBRSTATUS});
exten => s,n,Goto(aheeva_sbr,aheeva_sbr-${SBRSTATUS},1)

exten => _s.,1,Set(AH_PHONE_NUMBER=0)
exten => _s.,n,Set(AH_RECORDID=0)
exten => _s.,n,Set(CALLERID(name)=${CUT(CALLERID(name)|&|1)}${CUT(CALLERID(name)|&|2)})
exten => _s.,n,AHEventsProxy(MSG_TYPE_SBR_ROUTING_REQUEST${EXTEN:1})
exten => _s.,n,Goto(aheeva_sbr,aheeva_sbr-${SBRSTATUS},1)

exten => _BR.,1,Wait(0.5)
exten => _BR.,2,Set(LIST_NAME=${CUT(AH_URL,*,2)})
exten => _BR.,3,GotoIf($["${LIST_NAME}" = ""]?4:6)
exten => _BR.,4,AHEventsProxy(MSG_TYPE_SBR_ROUTING_REQUEST^broadcast=true^phone_num=${EXTEN:2}^amdstatus=${AMDSTATUS})
exten => _BR.,5,Goto(7)
exten => _BR.,6,AHEventsProxy(MSG_TYPE_SBR_ROUTING_REQUEST^broadcast=true^phone_num=${EXTEN:2}^${LIST_NAME}^amdstatus=${AMDSTATUS})
exten => _BR.,7,Goto(aheeva_sbr,aheeva_sbr-${SBRSTATUS},1)

exten => aheeva_sbr-NORMAL,1,Hangup
exten => aheeva_sbr-NO_SCRIPT_DEFINED,1,Hangup
exten => aheeva_sbr-NO_ONE_AVAILABLE,1,Hangup

exten => aheeva_sbr-CCS_NOT_AVAILABLE,1,Goto(aheeva_ccs_not_available,s,1)
exten => aheeva_sbr-CCS_NOT_AVAILABLE,n,Hangup

exten => h,1,GotoIf($["${AH_AGENT_CHANNEL}" = "1"]?4:2)
exten => h,2,GotoIf($["${AH_MASTER_CHANNEL}" = "1"]?4:3)
exten => h,3,DumpChan( );
exten => h,4,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,5,Hangup

[ahPhone_init]
exten => _OUTSOFT.,1,Dial(IAX2/${EXTEN:7},30,tT)
exten => _OUTSOFT.,n,Hangup

exten => _OUTHARD.,1,Dial(SIP/${EXTEN:7},30,tT)
exten => _OUTHARD.,n,Hangup

[ccssbr]
exten => _CCSSBR_.,1,NoOp([${EXTEN}])
exten => _CCSSBR_.,n,AHEventsProxy(MSG_TYPE_SBR_DISTRIBUTE_NOW:${EXTEN:7})
exten => _CCSSBR_.,n,Hangup

; Outbound dial context
[aheeva_ccs]
; If we are dialing out through another Asterisk, sometimes when a call is not
; answered the DIALSTATUS gets set to CANCEL and Asterisk just aborts the DIAL
; and jumps directly to the h extension without continuing processing in the
; dialplan after the Dial application, which means that we do not send the
; DIALSTATUS to the CCS server after the dial. This is why we need to capture
; here in the h extension and send a NOANSWER.

exten => h,1,NoOp(ds= ${DIALSTATUS});
exten => h,2,GotoIf($["${DIALSTATUS}" = "ANSWER"]?6:3)
exten => h,3,GotoIf($["${DIALSTATUS}" = "CANCEL"]?4:5)
exten => h,4,AHEventsProxy(NOANSWER:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,5,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH}:${AH_AGENTID})
exten => h,6,Hangup

;edite aqui la troncal saliente kn06497-esto es para el broadcast
exten => _OUT.,1,NoOp(AHEEVA1 Variables: AH_PHONE_NUMBER=[${AH_PHONE_NUMBER}] AH_QUEUE=[${AH_QUEUE}] AH_URL=[${AH_URL}] AH_RECORDID=[${AH_RECORDID}] AH_AMD_REQUIRED=[${AH_AMD_REQUIRED}] AH_CALLERID=[${AH_CALLERID}] AHEEVA_TRACKNUM=[${AHEEVA_TRACKNUM}] AH_LEAVE_MESSAGE=[${AH_LEAVE_MESSAGE}])
exten => _OUT.,2,SetCallerId(${AH_CALLERID})
;exten => _OUT.,3,Dial(IAX2/asterisk-new/${AH_PHONE_NUMBER},30)
exten => _OUT.,3,Dial(IAX2/iax_sipdialer_peer/${AH_PHONE_NUMBER},30)
exten => _OUT.,4,NoOp(Dial Status=[${DIALSTATUS}] Hangup Cause=[${HANGUPCAUSE}])
exten => _OUT.,5,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL" & "${HANGUPCAUSE}" = "16"]?6:8)
exten => _OUT.,6,AHEventsProxy(MSG_TYPE_CALL_SIT:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => _OUT.,7,Goto(9)
exten => _OUT.,8,AHEventsProxy(${DIALSTATUS}:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => _OUT.,9,NoOp()

; Answer context
exten => ccs_answer,1,Goto(aheeva_ccs_answer,ccs_answer,1)

; Answer context, for outbound dials
[aheeva_ccs_answer]
; Call has been answered, but hasn't been distributed
exten => h,1,NoOp(AMDSTATUS is ${AMDSTATUS})
exten => h,2,GotoIf($["${AMDSTATUS}" = "HANGUP"]?aheeva_ccs_HANGUP,ccs_answer-HANGUP,1:3)
exten => h,3,AHEventsProxy(MSG_TYPE_CALL_ANSWERED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
; Set the call to abandoned, as it has been answered but never distributed
exten => h,4,AHEventsProxy(MSG_TYPE_QUEUE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,5,AHEventsProxy(MSG_TYPE_QUEUE_ABANDONED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,6,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,7,Hangup

; Setting queue status now, because the distribute will need it
exten => ccs_answer,1,Set(AH_CALLSTATUS=UNKNOWN)
exten => ccs_answer,2,Answer
exten => ccs_answer,3,GotoIf($["${AH_AMD_REQUIRED}" = "1"]?4:aheeva_ccs_HUMAN,ccs_answer-HUMAN,1)
exten => ccs_answer,4,AMD
exten => ccs_answer,5,Noop(AMDSTATUS[${AMDSTATUS}] AMDCAUSE[${AMDCAUSE}])
exten => ccs_answer,6,Goto(aheeva_ccs_${AMDSTATUS},ccs_answer-${AMDSTATUS},1)


; Notsure answer context, for outbound dials
[aheeva_ccs_NOTSURE]
; Call has been answered, but hasn't been distributed
exten => h,1,AHEventsProxy(MSG_TYPE_CALL_ANSWERED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
; Set the call to abandoned, as it has been answered but never distributed
exten => h,2,AHEventsProxy(MSG_TYPE_QUEUE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,3,AHEventsProxy(MSG_TYPE_QUEUE_ABANDONED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,4,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,5,Hangup

exten => ccs_answer-NOTSURE,1,Goto(aheeva_ccs_HUMAN,ccs_answer-HUMAN,1)

; Human answer context, for outbound dials
[aheeva_ccs_HUMAN]
; Call hasn't been distributed yet, but the hang-up was received, terminate it
exten => h,1,GotoIf($["${AH_CALLSTATUS}" = "UNKNOWN"]?2:3)
; FIXME: Do we have to set an abandon here?
exten => h,2,AHEventsProxy(MSG_TYPE_CALL_ANSWERED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
; Set the call to abandoned, as it has been answered but never distributed
exten => h,3,AHEventsProxy(MSG_TYPE_QUEUE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,4,AHEventsProxy(MSG_TYPE_QUEUE_ABANDONED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,5,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,6,Hangup

exten => ccs_answer-HUMAN,1,AHEventsProxy(MSG_TYPE_CALL_ANSWERED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => ccs_answer-HUMAN,2,Set(AH_CALLSTATUS=ANSWERED)
exten => ccs_answer-HUMAN,3,GotoIf($["${AH_URL:0:9}" = "broadcast"]?aheeva_ccs_broadcast,ccs_answer_broadcast,2:4)
; Initializing distribute variables (this avoids races)
exten => ccs_answer-HUMAN,4,Set(AH_QUEUESTATUS=UNKNOWN)
exten => ccs_answer-HUMAN,5,Set(AH_DISTRIBUTE_TRY=0)
; Try to distribute that call now
exten => ccs_answer-HUMAN,6,Goto(ccs_distribute,distribute,1)

[aheeva_ccs_MACHINE]
; Might have been hanged up before setting the answer type
exten => h,1,GotoIf($["${AH_CALLSTATUS}" = "UNKNOWN"]?2:3)
exten => h,2,AHEventsProxy(MSG_TYPE_CALL_ANSWER_MACHINE:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,3,Hangup

exten => ccs_answer-MACHINE,1,AHEventsProxy(MSG_TYPE_CALL_ANSWER_MACHINE:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => ccs_answer-MACHINE,2,Set(AH_CALLSTATUS=MACHINE)
exten => ccs_answer-MACHINE,3,GotoIf($["${AH_URL:0:9}" = "broadcast"]?aheeva_ccs_broadcast,ccs_answer_broadcast,1:4)
exten => ccs_answer-MACHINE,4,Hangup

[aheeva_ccs_HANGUP]

exten => ccs_answer-HANGUP,1,AHEventsProxy(MSG_TYPE_CALL_ANSWERED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => ccs_answer-HANGUP,2,AHEventsProxy(MSG_TYPE_QUEUE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_QUEUE}:${EPOCH}:${EXTEN})
exten => ccs_answer-HANGUP,3,AHEventsProxy(MSG_TYPE_QUEUE_ABANDONED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => ccs_answer-HANGUP,4,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => ccs_answer-HANGUP,5,Hangup


[aheeva_ccs_broadcast]
; Call has already been terminated by the CTI when it's an answering machine
exten => h,1,GotoIf($["${AH_CALLSTATUS}" = "MACHINE"]?3:2)
exten => h,2,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,3,Hangup

exten => ccs_answer_broadcast,1,GotoIf($["${AH_LEAVE_MESSAGE}" = "1"]?2:3)
exten => ccs_answer_broadcast,2,Goto(aheeva_sbr,BR${AH_PHONE_NUMBER}^script=${AH_QUEUE},1)
exten => ccs_answer_broadcast,3,Hangup

[ccs_distribute]
exten => h,1,GotoIf($["${AH_QUEUESTATUS}" = "UNKNOWN"]?3:2)
exten => h,2,GotoIf($["${AH_QUEUESTATUS}" = "ABANDONED"]?4:5)
; Abandoned status
exten => h,3,AHEventsProxy(MSG_TYPE_QUEUE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,4,AHEventsProxy(MSG_TYPE_QUEUE_ABANDONED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
; Normal cleanup
exten => h,5,GotoIf($["${AH_MASTER_CHANNEL}" = "1"]?7:6)
exten => h,6,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,7,Hangup

; Only try to distribute 3 times to avoid infinite loops
exten => distribute,1,GotoIf($[${MATH(${AH_DISTRIBUTE_TRY}<${AH_DISTRIBUTE_MAX_TRY})}=TRUE]?4:2)
exten => distribute,2,NoOp(ccs_distribute: Maximum number [${AH_DISTRIBUTE_MAX_TRY}] of distribute retry reached)
exten => distribute,3,Goto(16)

exten => distribute,4,Set(AH_DISTRIBUTE_TRY=${MATH(${AH_DISTRIBUTE_TRY}+1,i)})
exten => distribute,5,AhAgentDistribute(${AH_QUEUE}|${EPOCH}|${AH_PHONE_NUMBER}|ccs_answer|${AHEEVA_TRACKNUM}|${AH_AGENTID}||1|${AH_URL})

; Continuing in the dialplan means a recoverable error occurred
exten => distribute,6,GotoIf($["${AH_QUEUESTATUS}" = "REMOTE"]?7:13)
; The call was sent to a remote asterisk, look for an error in the dial
exten => distribute,7,GotoIf($["${DIALSTATUS}" = "ANSWER"]?8:9)
exten => distribute,8,Hangup
; Can't dial to the remote asterisk, try again
exten => distribute,9,GotoIf($["${DIALSTATUS}" = "CONGESTION"]?1:10)
; Client/channel hung up before reaching the remote asterisk
exten => distribute,10,GotoIf($["${DIALSTATUS}" = "CANCEL"]?16:11)
exten => distribute,11,NoOp(ccs_answer-HUMAN: Got an unhandled remote dial status [${DIALSTATUS}])
; For any other error, try again
exten => distribute,12,Goto(1)
; The distribute was local, look for problems when reaching the agent
exten => distribute,13,GotoIf($["${AH_AGENT_DISTRIBUTE_STATUS}" = "AGENT_NO_LONGER_AVAILABLE"]?1:14)
exten => distribute,14,GotoIf($["${AH_AGENT_DISTRIBUTE_STATUS}" = "FAILED"]?1:15)
exten => distribute,15,NoOp(ccs_answer-HUMAN: Got an distribute status [${AH_AGENT_DISTRIBUTE_STATUS}])
; Don't know what happened if reached here
; Cancelling the call...
exten => distribute,16,Set(AH_QUEUESTATUS=ABANDONED)
exten => distribute,17,Hangup

[ccsr]
; Call has already been queued
exten => h,1,AHEventsProxy(MSG_TYPE_QUEUE_ABANDONED:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,2,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,3,Hangup

exten => _CCS.,1,Set(AH_TEMP=${EXTEN:3})
exten => _CCS.,n,Noop([${AH_TEMP}])
exten => _CCS.,n,Set(AHEEVA_TRACKNUM=${CUT(AH_TEMP,^,1)})
exten => _CCS.,n,Set(AH_EXTEN=${CUT(AH_TEMP,^,2)})
exten => _CCS.,n,Set(AH_QUEUE=${CUT(AH_TEMP,^,3)})
exten => _CCS.,n,Set(AH_QUEUE_ADDRESS=${CUT(AH_TEMP,^,4)})
exten => _CCS.,n,Set(AH_AGENTID=${CUT(AH_TEMP,^,5)})
exten => _CCS.,n,Set(AH_PHONE_NUMBER=${CUT(AH_TEMP,^,6)})
exten => _CCS.,n,Set(AH_DISTRIBUTE_TRY=${MATH(${CUT(AH_TEMP,^,7)}-1,i)})
exten => _CCS.,n,Set(AH_URL=${CUT(AH_TEMP,^,8)})
exten => _CCS.,n,Noop([${AHEEVA_TRACKNUM}] [${AH_PHONE_NUMBER}] [${AH_EXTEN}] [${AH_QUEUE}] [${AH_QUEUE_ADDRESS}] [${AH_AGENTID}] [${AH_PHONE_NUMBER}] [${AH_URL}] )
exten => _CCS.,n,Set(AH_QUEUESTATUS=LOCAL)
exten => _CCS.,n,Goto(ccs_distribute,distribute,1)

[aheeva_ccs_transfer]
exten => _TFER.,1,Dial(IAX2/iax_sipdialer_peer/${EXTEN:4})  ;(${TRUNK}/${EXTEN:4})
exten => _TFER.,n,Hangup

exten => h,1,DumpChan( );
exten => h,2,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})

exten => t,1,Hangup

[aheeva_ccs_transfer_to_agent]
exten => _TFER.,1,DumpChan( );
exten => _TFER.,2,GotoIf($["${AHEEVA_AGENT_ISAVAILABLE}" = "1"]?:AgentUnavail,1);
exten => _TFER.,3,AhAgentDistribute(|${EPOCH}|${CALLERID(num)}|${CALLERID(num)}|${AHEEVA_TRACKNUM}|${EXTEN:4}||||${AGENT_LOCATION})
exten => _TFER.,4,Hangup

exten => h,1,DumpChan( );
exten => h,2,GotoIf($["${DIALSTATUS}" = "CHANUNAVAIL"]?ChUnavail,1);
exten => h,n,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH});
exten => h,n,Hangup

exten => AgentUnavail,1,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH});
exten => AgentUnavail,2,Busy();
exten => AgentUnavail,3,Hangup();

exten => ChUnavail,1,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})

exten => t,1,Hangup

[aheeva_ccs_conference]

exten => _GMEETME.,1,Meetme(${EXTEN:7},Adqx)
exten => _GMEETME.,2,Hangup

exten => _MEETME.,1,Meetme(${EXTEN:6},dqx)
exten => _MEETME.,n,Hangup

exten => h,1,GotoIf($["${AH_MASTER_CHANNEL}" = "1"]?3:2)
exten => h,2,GotoIf($["${AH_AGENT_CHANNEL}" = "1"]?5:4)
exten => h,3,AHEventsProxy(MSG_TYPE_AGENT_CONFERENCE_HANGUP:${AHEEVA_TRACKNUM}:${AH_AGENT_ID}:${AH_RECORDID}:${EPOCH})
exten => h,4,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,5,Hangup

exten => t,1,Hangup

[aheeva_ccs_ahphone_conf]
exten => _MEETME.,1,Meetme(${EXTEN:6},dqx)
exten => _MEETME.,n,Hangup

; Send terminate call to help cti server have an accurate number of lines used
exten => h,1,AHEventsProxy(MSG_TYPE_TERMINATE_CALL:${AHEEVA_TRACKNUM}:${AH_PHONE_NUMBER}:${AH_RECORDID}:${EPOCH})
exten => h,n,Hangup

[aheeva_spy]
exten => _AGSPY.,1,NOOP(AHEEVA MANAGER SPY)
exten => _AGSPY.,n,AheevaAgentIsAvailable(${EXTEN:5})
exten => _AGSPY.,n,GotoIf($["${AHEEVA_AGENT_ISAVAILABLE}" = "1"]?aheevaphone_spy:starphone_spy)
exten => _AGSPY.,n(aheevaphone_spy),AhChanSpy(${AHEEVA_AGENTPHONE_CHANNEL},q)
exten => _AGSPY.,n,Noop
exten => _AGSPY.,n,Hangup
exten => _AGSPY.,n(starphone_spy),AhChanSpy(IAX2/${EXTEN:5},qb)
exten => _AGSPY.,n,Hangup


;When the CTI is not available we go here
;Dont forget to customize it in the aheeva_custom_dialplan.conf
[aheeva_ccs_not_available]
exten => s,1,Noop(WARNING: ------------CCS SERVER NOT AVAILABLE-----------);
exten => s,n,DumpChan();


#include "aheeva_custom_dialplan.conf"
