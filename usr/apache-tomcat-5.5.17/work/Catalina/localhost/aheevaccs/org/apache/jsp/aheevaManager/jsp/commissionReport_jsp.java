package org.apache.jsp.aheevaManager.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.*;
import java.lang.*;
import aheevaManager.wfm.*;
import java.util.StringTokenizer;
import aheevaManager.reports.*;
import javax.naming.*;
import javax.sql.*;
import java.sql.*;
import aheevaManager.schedule.*;
import java.io.*;
import java.io.File;
import java.io.RandomAccessFile;
import java.io.FileNotFoundException;
import java.io.IOException;
import aheevaManager.csvinterface.*;
import aheevaManager.ressources.*;
import java.util.*;
import jxl.*;
import java.text.*;
import aheevaManager.schedule.*;
import aheevaManager.ressources.*;
import java.util.*;
import jxl.*;

public final class commissionReport_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static java.util.List _jspx_dependants;

  static {
    _jspx_dependants = new java.util.ArrayList(1);
    _jspx_dependants.add("/aheevaManager/jsp/../Resources_pages/xc2_default_labels.jsp");
  }

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    JspFactory _jspxFactory = null;
    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      _jspxFactory = JspFactory.getDefaultFactory();
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

////open connection to database///////
beanManagerData pageCorepData = new beanManagerData();
System.out.println(session.getAttribute("USER_LANGUAGE"));
if( session.getAttribute("USER_LANGUAGE") != null )
	pageCorepData.setDefaultLanguage((String)session.getAttribute("USER_LANGUAGE"));
pageCorepData.openConnection();
    
      out.write('\n');
      out.write('\n');
      aheevaManager.wfm.beanCommissionReport beanAgentCommission = null;
      synchronized (session) {
        beanAgentCommission = (aheevaManager.wfm.beanCommissionReport) _jspx_page_context.getAttribute("beanAgentCommission", PageContext.SESSION_SCOPE);
        if (beanAgentCommission == null){
          beanAgentCommission = new aheevaManager.wfm.beanCommissionReport();
          _jspx_page_context.setAttribute("beanAgentCommission", beanAgentCommission, PageContext.SESSION_SCOPE);
        }
      }
      out.write("\n");
      out.write("\n");
      out.write("<html>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \n");
      out.write("<head>\n");
      out.write("\n");


beanAgentCommission.setTenantDBID(request.getParameter("tenant_dbid"));

String tenant_dbid = request.getParameter("tenant_dbid");
String fromDate = request.getParameter("fromDate");
String toDate = request.getParameter("toDate");
String objId = request.getParameter("objId");
String reqType = request.getParameter("reqType");
String submitRequest = request.getParameter("viewData");


      out.write("\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n");
      out.write("<link id=\"luna-tab-style-sheet\" type=\"text/css\" rel=\"stylesheet\" href=\"../Resources_pages/tab_luna.css\" />\n");
      out.write("<link id=\"luna-tab-style-sheet\" type=\"text/css\" rel=\"stylesheet\" href=\"../Resources_pages/style_2.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"../Resources_pages/xc2_default.css\" type=\"text/css\">\n");
      out.write("<LINK href=\"../Resources_pages/livestats.css\" \trel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<meta http-equiv=\"Content-Language\" content=\"en-us\">\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write(".dynamic-tab-pane-control .tab-page {\n");
      out.write("\theight:\t\t200px;\n");
      out.write("}\n");
      out.write(".dynamic-tab-pane-control .tab-page .dynamic-tab-pane-control .tab-page {\n");
      out.write("\theight:\t\t100px;\n");
      out.write("}\n");
      out.write("html, body {\n");
      out.write("\t/*background:\t; */\r\n");
      out.write("\tbackground-color: #b8ced9;\r\n");
      out.write("\tbackground-image: url(../img/rep_body.png);\r\n");
      out.write("\tbackground-repeat: repeat-x;\r\n");
      out.write("}\n");
      out.write("form {\n");
      out.write("\tmargin:\t\t0;\n");
      out.write("\tpadding:\t0;\n");
      out.write("}\n");
      out.write("/* over ride styles from webfxlayout */\n");
      out.write("body {\n");
      out.write("\tmargin:\t\t10px;\n");
      out.write("\twidth:\t\tauto;\n");
      out.write("\theight:\t\tauto;\n");
      out.write("}\n");
      out.write(".dynamic-tab-pane-control h2 {\n");
      out.write("\ttext-align:\tcenter;\n");
      out.write("\twidth:\t\tauto;\n");
      out.write("}\n");
      out.write(".dynamic-tab-pane-control h2 a {\n");
      out.write("\tdisplay:\tinline;\n");
      out.write("\twidth:\t\tauto;\n");
      out.write("}\n");
      out.write(".dynamic-tab-pane-control a:hover {\n");
      out.write("\tbackground: transparent;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

////open connection to database///////
beanManagerData pagexc2Data = new beanManagerData();
System.out.println(session.getAttribute("USER_LANGUAGE"));
if( session.getAttribute("USER_LANGUAGE") != null )
	pagexc2Data.setDefaultLanguage((String)session.getAttribute("USER_LANGUAGE"));
pagexc2Data.openConnection();
    
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script language=\"javascript\" type=\"text/javascript\">\r\n");
      out.write("// variables of labels;// \r\n");
      out.write("var phrase= new Array();\r\n");
      out.write("phrase[0]=\"");
      out.print( pagexc2Data.getWord("January"));
      out.write("\";\r\n");
      out.write("phrase[1]=\"");
      out.print( pagexc2Data.getWord("February"));
      out.write("\";\r\n");
      out.write("phrase[2]=\"");
      out.print( pagexc2Data.getWord("March"));
      out.write("\";\r\n");
      out.write("phrase[3]=\"");
      out.print( pagexc2Data.getWord("April"));
      out.write("\";\r\n");
      out.write("phrase[4]=\"");
      out.print( pagexc2Data.getWord("May"));
      out.write("\";         \r\n");
      out.write("phrase[5]=\"");
      out.print( pagexc2Data.getWord("June"));
      out.write("\";\r\n");
      out.write("phrase[6]=\"");
      out.print( pagexc2Data.getWord("July"));
      out.write("\";\r\n");
      out.write("phrase[7]=\"");
      out.print( pagexc2Data.getWord("August"));
      out.write("\";\r\n");
      out.write("phrase[8]=\"");
      out.print( pagexc2Data.getWord("September"));
      out.write("\";\r\n");
      out.write("phrase[9]=\"");
      out.print( pagexc2Data.getWord("October"));
      out.write("\";\r\n");
      out.write("phrase[10]=\"");
      out.print( pagexc2Data.getWord("November"));
      out.write("\";\r\n");
      out.write("phrase[11]=\"");
      out.print( pagexc2Data.getWord("December"));
      out.write("\";\r\n");
      out.write("phrase[12]=\"");
      out.print( pagexc2Data.getWord("Jan"));
      out.write("\";\r\n");
      out.write("phrase[13]=\"");
      out.print( pagexc2Data.getWord("Feb"));
      out.write("\";\r\n");
      out.write("phrase[14]=\"");
      out.print( pagexc2Data.getWord("Mar"));
      out.write("\";\r\n");
      out.write("phrase[15]=\"");
      out.print( pagexc2Data.getWord("Apr"));
      out.write("\";\r\n");
      out.write("phrase[16]=\"");
      out.print( pagexc2Data.getWord("May"));
      out.write("\";\r\n");
      out.write("phrase[17]=\"");
      out.print( pagexc2Data.getWord("Jun"));
      out.write("\";\r\n");
      out.write("phrase[18]=\"");
      out.print( pagexc2Data.getWord("Jul"));
      out.write("\";\r\n");
      out.write("phrase[19]=\"");
      out.print( pagexc2Data.getWord("Aug"));
      out.write("\";\r\n");
      out.write("phrase[20]=\"");
      out.print( pagexc2Data.getWord("Sep"));
      out.write("\";\r\n");
      out.write("phrase[21]=\"");
      out.print( pagexc2Data.getWord("Oct"));
      out.write("\";\r\n");
      out.write("phrase[22]=\"");
      out.print( pagexc2Data.getWord("Nov"));
      out.write("\";\r\n");
      out.write("phrase[23]=\"");
      out.print( pagexc2Data.getWord("Dec"));
      out.write("\";\r\n");
      out.write("phrase[24]=\"");
      out.print( pagexc2Data.getWord("Sunday"));
      out.write("\";\r\n");
      out.write("phrase[25]=\"");
      out.print( pagexc2Data.getWord("Monday"));
      out.write("\";\r\n");
      out.write("phrase[26]=\"");
      out.print( pagexc2Data.getWord("Tuesday"));
      out.write("\";\r\n");
      out.write("phrase[27]=\"");
      out.print( pagexc2Data.getWord("Wednesday"));
      out.write("\";\r\n");
      out.write("phrase[28]=\"");
      out.print( pagexc2Data.getWord("Thursday"));
      out.write("\";\r\n");
      out.write("phrase[29]=\"");
      out.print( pagexc2Data.getWord("Friday"));
      out.write("\";\r\n");
      out.write("phrase[30]=\"");
      out.print( pagexc2Data.getWord("Saturday"));
      out.write("\";\r\n");
      out.write("phrase[31]=\"");
      out.print( pagexc2Data.getWord("Sun"));
      out.write("\";\r\n");
      out.write("phrase[32]=\"");
      out.print( pagexc2Data.getWord("Mon"));
      out.write("\";\r\n");
      out.write("phrase[33]=\"");
      out.print( pagexc2Data.getWord("Tue"));
      out.write("\";\r\n");
      out.write("phrase[34]=\"");
      out.print( pagexc2Data.getWord("Wed"));
      out.write("\";\r\n");
      out.write("phrase[35]=\"");
      out.print( pagexc2Data.getWord("Thu"));
      out.write("\";\r\n");
      out.write("phrase[36]=\"");
      out.print( pagexc2Data.getWord("Fri"));
      out.write("\";\r\n");
      out.write("phrase[37]=\"");
      out.print( pagexc2Data.getWord("Sat"));
      out.write("\";\r\n");
      out.write("phrase[38]=\"");
      out.print( pagexc2Data.getWord("Su"));
      out.write("\";\r\n");
      out.write("phrase[39]=\"");
      out.print( pagexc2Data.getWord("Mo"));
      out.write("\";\r\n");
      out.write("phrase[40]=\"");
      out.print( pagexc2Data.getWord("Tu"));
      out.write("\";\r\n");
      out.write("phrase[41]=\"");
      out.print( pagexc2Data.getWord("We"));
      out.write("\";\r\n");
      out.write("phrase[42]=\"");
      out.print( pagexc2Data.getWord("Th"));
      out.write("\";\r\n");
      out.write("phrase[43]=\"");
      out.print( pagexc2Data.getWord("Fr"));
      out.write("\";\r\n");
      out.write("phrase[44]=\"");
      out.print( pagexc2Data.getWord("Sa"));
      out.write("\";\r\n");
      out.write("phrase[45]=\"");
      out.print( pagexc2Data.getWord(" Today "));
      out.write("\";\r\n");
      out.write("phrase[46]=\"");
      out.print( pagexc2Data.getWord("Clear"));
      out.write("\";\r\n");
      out.write("phrase[47]=\"");
      out.print( pagexc2Data.getWord("Back"));
      out.write("\";\r\n");
      out.write("phrase[48]=\"");
      out.print( pagexc2Data.getWord("Close"));
      out.write("\";\r\n");
      out.write("phrase[49]=\"");
      out.print( pagexc2Data.getWord("Reset"));
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
 pagexc2Data.closeConnection(); 
      out.write("\n");
      out.write("<script language=\"JavaScript\" type=\"text/javascript\" src=\"../Resources_pages/jsUtil.js\"></script>\n");
      out.write("<script language=\"javascript\" type=\"text/javascript\" src=\"../Resources_pages/Browser.js\"></script>\n");
      out.write("<script language=\"javascript\" type=\"text/javascript\" src=\"../Resources_pages/tabpane.js\"></script>\n");
      out.write("<!-- Calendrier début -->\n");
      out.write("<script language=\"javascript\" src=\"../Resources_pages/xc2_default.js\"></script>\n");
      out.write("<script language=\"javascript\">xcAutoHide=1000;</script>\n");
      out.write("<script language=\"javascript\" src=\"../Resources_pages/xc2_inpage.js\"></script>\n");
      out.write("<!-- Calendrier fin -->\n");
      out.write("\n");
      out.write("<script language=\"javascript\" type=\"text/javascript\">\n");
      out.write("\n");
      out.write("var tenant_dbid = normalizeString(QueryString('tenant_dbid'));\n");
      out.write("\n");
      out.write("var dataExtracted = normalizeString(QueryString(\"viewData\"));\n");
      out.write("\n");
      out.write("</script>\n");

out.write("<script>tenant_dbid = '"+tenant_dbid+"'</script>");
out.write("<script>dataExtracted = '"+submitRequest+"'</script>");


      out.write("\n");
      out.write("<script>\n");
      out.write("var userid = appletObj.getCurrentUserDBID();\n");
      out.write("\n");
      out.write("function changeDisabled()\n");
      out.write("{\n");
      out.write("\tdocument.agentHours.agtGrp.value = \"AllGroups\";\n");
      out.write("\t// Agent group radios\n");
      out.write("\tif(document.agentHours.agtChoice[0].checked)\n");
      out.write("\t{\n");
      out.write("\t\t// activer le div de l'agent group et desactiver celui de l agent\n");
      out.write("\t\tdocument.getElementById(\"listAgt\").style.visibility = 'hidden';\n");
      out.write("\t\tdocument.getElementById(\"listAgtGrp\").style.visibility = 'visible';\n");
      out.write("\t\tdocument.agentHours.agtChoice[1].checked = false;\n");
      out.write("\t\t//alert(\"agent group activation\");\t\t\n");
      out.write("\t\t\n");
      out.write("\t} \n");
      out.write("\t// Agent radios\n");
      out.write("\telse if(document.agentHours.agtChoice[1].checked)\n");
      out.write("\t{\n");
      out.write("\t\t// activer le div de l'agent et desactiver celui de l'agent group\n");
      out.write("\t\tdocument.getElementById(\"listAgt\").style.visibility = 'visible';\n");
      out.write("\t\tdocument.getElementById(\"listAgtGrp\").style.visibility = 'hidden';\n");
      out.write("\t\tdocument.agentHours.agtChoice[0].checked = false;\n");
      out.write("\t\t//alert(\"agent  activation\");\t\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function fillObjectCombo(groupBox, agentBox, viewBox)\n");
      out.write("{\n");
      out.write("\t\n");
      out.write("\tif(agentBox.options.length <= 1 )\n");
      out.write("\t{\n");
      out.write("\t\tvar agents = String( appletObj.getAgentsByName(tenant_dbid) );\n");
      out.write("\t\tvar o = new Array();\n");
      out.write("\t\t\n");
      out.write("\t\t//Fill agents combo box with agents name\n");
      out.write("        var jsAgents = agents + \"\";\n");
      out.write("    \tarrayAgents = jsAgents.split(\"|\");\t\t\n");
      out.write("    \tif(agents.length > 0 )\n");
      out.write("\t\t{\n");
      out.write("    \t\tfor (j = 0; j <arrayAgents.length; j++)\n");
      out.write("\t\t\t{\n");
      out.write("    \t\t\tvar iStartPos = arrayAgents[j].indexOf('[');\n");
      out.write("    \t\t\tvar iEndPos   = arrayAgents[j].indexOf(']');\n");
      out.write("    \t\t\tvar login = arrayAgents[j].substr(iStartPos+1,iEndPos-iStartPos-1);\n");
      out.write("\t\t\t\tvar name = login+'['+arrayAgents[j].substr(0,iStartPos)+']';\n");
      out.write("\t\t\t\tif ( viewBox.checked == false)\t  \t\t// show agents name as : firstname, lastname[login]\n");
      out.write("      \t\t\t\tmyOption = new Option(arrayAgents [j],login)\n");
      out.write("\t\t\t\telse\t\t\t\t\t\t\t\t\t// show agents name as : login[firstname, lastname]\n");
      out.write("\t\t\t\t\tmyOption = new Option(name,login)\n");
      out.write("\t\t\t\to[o.length]= myOption;\n");
      out.write("    \t\t}\t\t\t\n");
      out.write("\t\t}\n");
      out.write("\t\t//Sort the object\n");
      out.write("\t\tsortSelect(o);\n");
      out.write("\t\tfor (var i=0; i<o.length; i++)\n");
      out.write("\t\t{\n");
      out.write("\t\t\tagentBox.options[i+1] = new Option(o[i].text, o[i].value, o[i].defaultSelected, o[i].selected);\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tif(groupBox.options.length <= 1 )\n");
      out.write("\t{\n");
      out.write("\t\tvar agentGroups = String( appletObj.getAgentGroupDbidAndName(tenant_dbid) ); // dbid. name\n");
      out.write("\t\tvar jsAgentGroups = agentGroups + \"\";\n");
      out.write("\t\tvar arrayGroups = jsAgentGroups.split(\"|\");\n");
      out.write("\t\tfor (j = 0; j < arrayGroups.length; j++)\n");
      out.write("\t\t{\n");
      out.write("\t\t\tvar agtGrp = arrayGroups[j].split(\",\");\n");
      out.write("\t\t\tmyOption = new Option(agtGrp[1],agtGrp[0])\n");
      out.write("\t\t\toptionPos = groupBox.options.length\n");
      out.write("\t\t\tgroupBox.options[optionPos]=myOption\n");
      out.write("\t\t}\n");
      out.write("\t }\n");
      out.write("}\n");
      out.write("\n");
      out.write("function getAgentGroupId(agtGroupName)\n");
      out.write("{\n");
      out.write("\tvar agentsGrp = String( appletObj.getAgentGroupInfo(agtGroupName) );\n");
      out.write("\tvar jsAgents = agentsGrp + \"\";        \n");
      out.write("\n");
      out.write("\tif(agentsGrp.length > 0 )\n");
      out.write("\t{\n");
      out.write("\t\tarrayAgents = jsAgents.split(\"|\");\n");
      out.write("    \tvar grpDbid = arrayAgents[0];\n");
      out.write("\t\tobjId = grpDbid;\n");
      out.write("\t\tdocument.getElementById(\"idObject\").value = grpDbid;\n");
      out.write("    }\n");
      out.write("\t//alert(\"function getAgentGroupId(agtGroupName) --> objId value : \"+ objId);\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function getAgentsInGroup(groupBox, agentBox, viewBox)\n");
      out.write("{\n");
      out.write("\tvar o = new Array();\n");
      out.write("\tif(groupBox.value =='AllGroups')\n");
      out.write("\t{\n");
      out.write("\t\t\n");
      out.write("\t\t//Empty the agent group combo box\n");
      out.write("\t\tgroupBox.options.length=1;\n");
      out.write("\t\tagentBox.length = 0;\n");
      out.write("        var defaultvalue = '- ");
      out.print( pageCorepData.getWord("Select an agent"));
      out.write(" -'; //  \"- All Agents -\" ;\n");
      out.write("\t\tmyOption = new Option(defaultvalue,\"AllAgents\")\n");
      out.write("\t\toptionPos = agentBox.options.length\n");
      out.write("\t\tagentBox.options[optionPos]=myOption\n");
      out.write("\t\t\n");
      out.write("\t\tfillObjectCombo(groupBox, agentBox, viewBox);\n");
      out.write("\t}\n");
      out.write("\telse\n");
      out.write("\t{\n");
      out.write("\t\tvar agtGroupName = \"\";\n");
      out.write("\t\t\n");
      out.write("\t\tfor (var i = 0; i < groupBox.length; i++)\n");
      out.write("\t\t{\n");
      out.write("\t\t\tif (groupBox.options[i].selected == true)\n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tagtGroupName = groupBox.options[i].text;\n");
      out.write("\t\t\t\tdocument.getElementById(\"idRequest\").value = \"1\";\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t// retrouver le id de l'agent group\n");
      out.write("\t\t\t\tgetAgentGroupId(agtGroupName)\n");
      out.write("\t\t\t\t//alert(\"getAgentsInGroup(groupBox, agentBox, viewBox) agtGroupName \" + agtGroupName);\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t\tvar agents = String( appletObj.getAvailableAgentListInGroupByStatus(agtGroupName,1) );\n");
      out.write("\t\tvar jsAgents = agents + \"\";\n");
      out.write("\n");
      out.write("\t\t// Remove all agents from agents option field\n");
      out.write("\t\tvar i=agentBox.options.length;\n");
      out.write("        if (i>0)\n");
      out.write("\t\t{\n");
      out.write("              //agentBox.length = 0;\n");
      out.write("        }\n");
      out.write("        var defaultvalue =  '- ");
      out.print( pageCorepData.getWord("Select an agent"));
      out.write(" -'; // \"- All Agents -\" ;\n");
      out.write("\t\tmyOption = new Option(defaultvalue,\"AllAgents\")\n");
      out.write("\t\to[o.length]= myOption;\n");
      out.write("\n");
      out.write("\t\tif(agents.length > 0 )\n");
      out.write("\t\t{\n");
      out.write("\t\t\tarrayAgents = jsAgents.split(\"|\");\n");
      out.write("    \t\tfor (j = 0; j <arrayAgents.length; j++)\n");
      out.write("\t\t\t{\n");
      out.write("    \t\t\tvar iStartPos = arrayAgents[j].indexOf('[');\n");
      out.write("    \t\t\tvar iEndPos   = arrayAgents[j].indexOf(']');\n");
      out.write("    \t\t\tvar login\t  = arrayAgents[j].substr(iStartPos+1,iEndPos-iStartPos-1);\n");
      out.write("\t\t\t\tvar name = login+'['+arrayAgents[j].substr(0,iStartPos)+']';\n");
      out.write("\t\t\t\tif ( viewBox.checked == false)\t  \t\t// show agents name as : firstname, lastname[login]\n");
      out.write("      \t\t\t\tmyOption = new Option(arrayAgents [j],login)\n");
      out.write("\t\t\t\telse\t\t\t\t\t\t\t\t\t// show agents name as : login[firstname, lastname]\n");
      out.write("\t\t\t\t\tmyOption = new Option(name,login)\n");
      out.write("\n");
      out.write("\t\t\t\to[o.length]= myOption;\n");
      out.write("\t\t\t}\n");
      out.write("         }\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tsortSelect(o);\n");
      out.write("\n");
      out.write("\treturn;\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function getAgents(agentBox)\n");
      out.write("{\n");
      out.write("\tvar o = new Array();\n");
      out.write("\tif(agentBox.value !='AllAgents')\n");
      out.write("\t{\n");
      out.write("\t\tvar agtName = \"\";\n");
      out.write("\t\t\n");
      out.write("\t\tfor (var i = 0; i < agentBox.length; i++)\n");
      out.write("\t\t{\n");
      out.write("\t\t\tif (agentBox.options[i].selected == true)\n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tagtName = agentBox.options[i].text;\n");
      out.write("\t\t\t\tif(document.getElementById(\"Checkbox2\").checked == false)\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tvar iStartPos = agtName.indexOf('[');\n");
      out.write("\t\t\t\t\tvar iEndPos   = agtName.indexOf(']');\n");
      out.write("\t\t\t\t\tvar name = agtName.substr(0,iStartPos);\n");
      out.write("\t\t\t\t\tvar login\t  = agtName.substr(iStartPos+1,iEndPos-iStartPos-1);\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\telse\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\tvar iStartPos = agtName.indexOf('[');\n");
      out.write("\t\t  \t\t\tvar iEndPos   = agtName.indexOf(']');\n");
      out.write("\t\t  \t\t\tvar login = agtName.substr(0,iStartPos);\n");
      out.write("\t\t  \t\t\tvar name\t  = agtName.substr(iStartPos+1,iEndPos-iStartPos-1);\n");
      out.write("\t\t\t\t}\t\t\t\t\n");
      out.write("\t\t\t\t//alert(\"name:\" + name+\"login:\"+login);\n");
      out.write("\t\t\t\tdocument.getElementById(\"idRequest\").value = \"2\";\n");
      out.write("\t\t\t\tdocument.getElementById(\"idObject\").value = login;\n");
      out.write("\t\t\t\tbreak;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}       \n");
      out.write("\t}\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function loadAgentGrp()\n");
      out.write("{\n");
      out.write("\tgetAgentsInGroup(document.getElementById(\"agtGrp\"), document.getElementById(\"objects\"), document.getElementById(\"viewckbox\"));\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("function changeAgentListView(groupBox, agentBox, viewBox)\n");
      out.write("{\n");
      out.write("\tvar agents;\n");
      out.write("\tvar name=\"\";\n");
      out.write("\tvar o = new Array();\n");
      out.write("\tagentBox.length = 0;\n");
      out.write("    var defaultvalue =  \"- ");
      out.print( pageCorepData.getWord("Select an agent"));
      out.write("  -\"; // \"- All Agents -\" ;\n");
      out.write("\tmyOption = new Option(defaultvalue,\"AllAgents\")\n");
      out.write("\to[o.length]=myOption\n");
      out.write("\n");
      out.write("\tif(groupBox.value == 'AllGroups')\n");
      out.write("\t\tagents = String( appletObj.getAgentsByNameActif(tenant_dbid) );\n");
      out.write("\telse\n");
      out.write("\t\tagents = String( appletObj.getAvailableAgentListInGroupByStatus(groupBox.options[groupBox.selectedIndex].text,1) );\n");
      out.write("\n");
      out.write("    var jsAgents = agents + \"\";\n");
      out.write("    arrayAgents = jsAgents.split(\"|\");\n");
      out.write("    for (j = 0; j <arrayAgents.length; j++){\n");
      out.write("\t\t  var iStartPos = arrayAgents[j].indexOf('[');\n");
      out.write("\t\t  var iEndPos   = arrayAgents[j].indexOf(']');\n");
      out.write("\t\t  var login\t  = arrayAgents[j].substr(iStartPos+1,iEndPos-iStartPos-1);\n");
      out.write("\t\t  name = login+'['+arrayAgents[j].substr(0,iStartPos)+']'\n");
      out.write("\t\t  if ( viewBox.checked == false)  // show agents name as : firstname, lastname[login]\n");
      out.write("\t\t\tmyOption = new Option(arrayAgents[j],login);  // show agents name as : login[firstname, lastname]\n");
      out.write("\t\t  else\n");
      out.write("\t\t\tmyOption = new Option(name,login);\n");
      out.write("\t\t  o[o.length]=myOption\n");
      out.write("\n");
      out.write("   }\n");
      out.write("\n");
      out.write("  \n");
      out.write("   // Sorted by id\n");
      out.write("   if (viewBox.checked == false)\t\n");
      out.write("\t{\n");
      out.write("   \t\to = o.sort(\n");
      out.write("\t\t\tfunction(a,b) \n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tif ((a.text+\"\") < (b.text+\"\")) { return -1; }\n");
      out.write("\t\t\t\tif ((a.text+\"\") > (b.text+\"\")) { return 1; }\n");
      out.write("\t\t\t\treturn 0;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t);\n");
      out.write("\t}\n");
      out.write("\telse\n");
      out.write("\t{\n");
      out.write("\t\to = o.sort(\n");
      out.write("\t\t\tfunction(a,b) \n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\tif (parseInt(a.value) < parseInt(b.value)) { return -1; }\n");
      out.write("\t\t\t\tif (parseInt(a.value) > parseInt(b.value)) { return 1; }\n");
      out.write("\t\t\t\treturn 0;\n");
      out.write("\t\t\t}\t\t\t\t\n");
      out.write("\t\t);   \t\n");
      out.write("\t}\t\n");
      out.write("   \n");
      out.write("\tfor (var i=0; i<o.length; i++) {\n");
      out.write("\t\tagentBox.options[i] = new Option(o[i].text, o[i].value, o[i].defaultSelected, o[i].selected);\n");
      out.write("\t\t}\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function convertTimeToSeconds(time)\n");
      out.write("{\n");
      out.write("\ttotal_time = 0;\n");
      out.write("\thour = 0;\n");
      out.write("\tminute = 0;\n");
      out.write("\tsecond = 0;\n");
      out.write("\tif(time.indexOf(\":\") != -1)\n");
      out.write("\t{\n");
      out.write("\t\ttime_array = time.split(\":\");\n");
      out.write("\t\thour = time_array[0] != null && IsNumeric(time_array[0]) ? time_array[0] : 0;\n");
      out.write("\t\tminute = time_array[1] != null && IsNumeric(time_array[0]) ? time_array[1] : 0;\n");
      out.write("\t\tsecond = time_array[2] != null && IsNumeric(time_array[0]) ? time_array[2] : 0;\n");
      out.write("\t}\n");
      out.write("\telse\n");
      out.write("\t\thour = time;\n");
      out.write("\ttotal_time += hour * 3600 + minute * 60 + second * 1;\n");
      out.write("\treturn total_time;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function buildOverrideTime(id, time_format)\n");
      out.write("{\n");
      out.write("\tvar override_time = 0;\n");
      out.write("\tvar time_format_sec = 0;\n");
      out.write("\tvar agt_id = id.substring(14, id.length);\n");
      out.write("\tvar paid_time = document.getElementById(\"paidtime\"+agt_id).value;\n");
      out.write("\t//alert(convertTimeToSeconds(paid_time));\n");
      out.write("\t\n");
      out.write("\tif (time_format.substring(0, 1) == '-')\n");
      out.write("\t{\n");
      out.write("\t\ttime_format_sec = time_format.substring(1, time_format.length);\n");
      out.write("\t\t//alert(convertTimeToSeconds(time_format_sec));\n");
      out.write("\t\toverride_time = convertTimeToSeconds(paid_time) - convertTimeToSeconds(time_format_sec);\n");
      out.write("\t}\n");
      out.write("\telse\n");
      out.write("\t{\n");
      out.write("\t\ttime_format_sec = time_format.substring(0, time_format.length);\n");
      out.write("\t\t//alert(convertTimeToSeconds(time_format_sec));\n");
      out.write("\t\toverride_time = convertTimeToSeconds(paid_time) + convertTimeToSeconds(time_format_sec);\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tvar dest_id = \"overridetime\"+agt_id;\n");
      out.write("\t//alert(override_time);\n");
      out.write("\tvar override_hour = override_time / 3600;\n");
      out.write("\t//alert(override_hour);\n");
      out.write("\tbuildReadableTime(dest_id, override_hour);\n");
      out.write("}\n");
      out.write("\n");
      out.write("function buildCorrectionTime(id, value)\n");
      out.write("{\n");
      out.write("\tif (value.substring(0, 1) == '-')\n");
      out.write("\t{\n");
      out.write("\t\tdocument.getElementById(id).value = \"(\" + value.substring(1, value.length) + \")\";\n");
      out.write("\t}\n");
      out.write("\telse\n");
      out.write("\t{\n");
      out.write("\t\tdocument.getElementById(id).value = value;\n");
      out.write("\t}\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function buildReadableTime(id, time_hr)\n");
      out.write("{\n");
      out.write("\tvar signe = 1;\n");
      out.write("\tif (time_hr < 0)\n");
      out.write("\t{\n");
      out.write("\t\tsigne = -1;\n");
      out.write("\t\ttime_hr = -1*time_hr;\n");
      out.write("\t}\n");
      out.write("\tvar time_sec = time_hr*3600;\n");
      out.write("\tvar time = \"\";\n");
      out.write("\tvar hours = 0;\n");
      out.write("\tvar minutes = 0;\n");
      out.write("\tvar seconds = 0;\n");
      out.write("\n");
      out.write("\tif (time_hr < 0)\n");
      out.write("\t{\n");
      out.write("\t\ttime_sec = -1*time_sec;\n");
      out.write("\t}\n");
      out.write("\thours = parseInt(time_sec / 3600);\n");
      out.write("\tif ((hours < 10) && (hours > 0))\n");
      out.write("\t{\n");
      out.write("\t\ttime += \"0\";\n");
      out.write("\t\ttime += hours;\n");
      out.write("\t}\n");
      out.write("\telse if ((hours >= 10) && (hours > 0))\n");
      out.write("\t\ttime += hours;\n");
      out.write("\tif (hours == 0)\n");
      out.write("\t\ttime += \"00\";\n");
      out.write("\ttime += \":\";\n");
      out.write("\n");
      out.write("\tminutes = parseInt((time_sec - hours * 3600) / 60);\n");
      out.write("\tif ((minutes < 10) && (minutes > 0))\n");
      out.write("\t{\n");
      out.write("\t\ttime += \"0\";\n");
      out.write("\t\ttime += minutes;\n");
      out.write("\t}\n");
      out.write("\telse if ((minutes >= 10) && (minutes > 0))\n");
      out.write("\t\ttime += minutes;\n");
      out.write("\tif (minutes == 0)\n");
      out.write("\t\ttime += \"00\";\n");
      out.write("\ttime += \":\";\n");
      out.write("\n");
      out.write("\tseconds = parseInt((time_sec - minutes * 60) % 3600);\n");
      out.write("\tif (seconds < 10)\n");
      out.write("\t{\n");
      out.write("\t\ttime += \"0\";\n");
      out.write("\t\ttime += seconds;\n");
      out.write("\t}\n");
      out.write("\telse\n");
      out.write("\t\ttime += seconds;\n");
      out.write("\n");
      out.write("\tif (signe == -1)\n");
      out.write("\t{\n");
      out.write("\t\ttime = \"(\" + time + \")\";\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\tdocument.getElementById(id).value = time;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function extractAllData()\n");
      out.write("{\n");
      out.write("\tif(dateChecker() && choiceChecker())\n");
      out.write("\t{\n");
      out.write("\t\tvar fromDate = document.getElementById(\"fromDate\").value;\n");
      out.write("\t\tvar toDate = document.getElementById(\"toDate\").value;\n");
      out.write("\t\tvar reqType = document.getElementById(\"idRequest\").value;\n");
      out.write("\t\tvar objId = document.getElementById(\"idObject\").value;\n");
      out.write("\t\t\t\t\n");
      out.write("\t\tdocument.location = \"./commissionReport.jsp?viewData=true&tenant_dbid=\"+tenant_dbid+\"&fromDate=\"+fromDate+\"&toDate=\"+toDate+\"&reqType=\"+reqType+\"&objId=\"+objId;\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function compareDates(date1, date2)\n");
      out.write("{\n");
      out.write("\tvar comp_result = 'false';\n");
      out.write("\tvar tabDate1 = date1.split(\"/\");\n");
      out.write("\tvar tabDate2 = date2.split(\"/\");\n");
      out.write("\t//alert( tabDate1[2]+\"-\"+tabDate2[2] +\"-\"+tabDate1[1] +\"-\"+ tabDate2[1]+\"-\"+tabDate1[0] +\"-\"+ tabDate2[0]);\n");
      out.write("\t\n");
      out.write("\tif (parseInt(tabDate2[2], 10) < parseInt(tabDate1[2], 10) )\n");
      out.write("\t\treturn 'false';\n");
      out.write("\tif (parseInt(tabDate2[2], 10) > parseInt(tabDate1[2], 10) )\n");
      out.write("\t\treturn 'true';\n");
      out.write("\tif (parseInt(tabDate2[2], 10) == parseInt(tabDate1[2], 10) )\n");
      out.write("\t{\n");
      out.write("\t\t// mois\n");
      out.write("\t\tif (parseInt(tabDate2[0], 10) < parseInt(tabDate1[0], 10) )\n");
      out.write("\t\t\treturn 'false';\n");
      out.write("\t\tif (parseInt(tabDate2[0], 10) > parseInt(tabDate1[0], 10) )\n");
      out.write("\t\t\treturn 'true';\n");
      out.write("\t\tif (parseInt(tabDate2[0], 10) == parseInt(tabDate1[0], 10) )\n");
      out.write("\t\t{\n");
      out.write("\t\t\t// jour\n");
      out.write("\t\t\tif (parseInt(tabDate2[1], 10) < parseInt(tabDate1[1], 10) )\n");
      out.write("\t\t\t\treturn 'false';\n");
      out.write("\t\t\tif (parseInt(tabDate2[1], 10) >= parseInt(tabDate1[1], 10) )\n");
      out.write("\t\t\t\treturn 'true';\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("isIE=document.all;\n");
      out.write("isNN=!document.all&&document.getElementById;\n");
      out.write("\n");
      out.write("function viewExceptions()\n");
      out.write("{\n");
      out.write("\tif (document.getElementById(\"viewExceptionObj\") != null)\n");
      out.write("\t{\n");
      out.write("\t\tdocument.getElementById(\"viewExceptionObj\").value = 'true';\n");
      out.write("\t\tvar date_from = document.getElementById(\"fromDate\").value;\n");
      out.write("\t\tvar date_to = document.getElementById(\"toDate\").value;\n");
      out.write("\t\tdocument.getElementById(\"dateFrom\").value = date_from;\n");
      out.write("\t\tdocument.getElementById(\"dateTo\").value = date_to;\n");
      out.write("\t\t//alert(\"view exceptions \" + date_from +\"-\"+ date_to);\n");
      out.write("\t\tdocument.agentHours.submit();\n");
      out.write("\t}\t\n");
      out.write("}\n");
      out.write("\n");
      out.write("function dateChecker()\n");
      out.write("{\n");
      out.write("\tvar startDate=new Date(document.getElementById(\"fromDate\").value);\n");
      out.write("\tvar endDate = new Date(document.getElementById(\"toDate\").value);\n");
      out.write("\t\n");
      out.write("\tif(document.getElementById(\"fromDate\").value == \"\" || document.getElementById(\"toDate\").value == \"\")\n");
      out.write("\t{\n");
      out.write("\t\talert('");
      out.print( pageCorepData.getWord("Please enter a valid date to proceed"));
      out.write("');\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\t\n");
      out.write("\telse if(endDate < startDate)\n");
      out.write("\t{\n");
      out.write("\t\talert(\"");
      out.print( pageCorepData.getWord("Your ending date cannnot be smaller than your starting date"));
      out.write("\");\n");
      out.write("\t\treturn false;\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\treturn true;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function choiceChecker()\n");
      out.write("{\n");
      out.write("\tvar response = true;\n");
      out.write("\tif(document.getElementById(\"idObject\").value == \"\" )\n");
      out.write("\t{\n");
      out.write("\t\talert(\"");
      out.print( pageCorepData.getWord("Please select at least one object"));
      out.write("\");\n");
      out.write("\t\tresponse = false;\n");
      out.write("\t}\n");
      out.write("\tif(document.getElementById(\"idRequest\").value ==\"1\" && document.agentHours.agtChoice[0].checked == \"\" )\n");
      out.write("\t{\n");
      out.write("\t\talert(\"");
      out.print( pageCorepData.getWord("Please select at least one object"));
      out.write("\");\n");
      out.write("\t\tresponse = false;\n");
      out.write("\t}\n");
      out.write("\telse if(document.getElementById(\"idRequest\").value ==\"2\" && document.agentHours.agtChoice[1].checked == \"\" )\n");
      out.write("\t{\n");
      out.write("\t\talert(\"");
      out.print( pageCorepData.getWord("Please select at least one object"));
      out.write("\");\n");
      out.write("\t\tresponse= false;\n");
      out.write("\t}\n");
      out.write("\treturn response;\n");
      out.write("}\n");
      out.write("\n");
      out.write("function openSaveFileWindow()\n");
      out.write("{\n");
      out.write("\twindow.open('./commissionReport.xls');\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("}\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<!--<li id=\"menuli\"><a href=\"./jsp/commissionReport.jsp?viewData=&tenant_dbid=");
//=current_tenant_dbid
      out.write("&fromDate=&toDate=&reqType=&objId=\">");
//=pageData.getWord("Commission details")
      out.write("</a></li>--> \n");
      out.write("<body  class=\"rep_body\" onLoad=\"loadAgentGrp()\">\r\n");
String sret ="";
      out.write("\n");
      out.write("<div class=\"tab-pane\" id=\"tabPane1\">\n");
      out.write("<form name=\"agentHours\"  action=\"./commissionReport.jsp\" method=\"post\"    >\n");
      out.write("\t<input id=\"idObject\" type=\"hidden\" value=\"\"></input>\n");
      out.write("\t<input id=\"idRequest\" type=\"hidden\" value=\"\"></input>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\ttp1 = new WebFXTabPane( document.getElementById( \"tabPane1\" ) );\t\t\n");
      out.write("\t</script>\n");
      out.write("\t  <div class=\"tab-page\" id=\"searchoptions\">\n");
      out.write("\t  \t<h4 class=\"tab\">");
      out.print( pageCorepData.getWord("Commissions"));
      out.write("</h4>\n");
      out.write("\n");
      out.write("\t\t\t<script type=\"text/javascript\">\n");
      out.write("\t\t\t\ttp1.addTabPage( document.getElementById( \"searchoptions\" ) );\n");
      out.write("\t\t\t</script>\n");
      out.write("\t\t\t<fieldset>\n");
      out.write("\t\t\t\t<legend>");
      out.print( pageCorepData.getWord("Search options"));
      out.write("</legend>\n");
      out.write("\t\t\t\t<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border-collapse: collapse\" width=\"1455\">\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td height=\"25\" colspan=\"4\">&nbsp;\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td align=\"right\" width=\"251\" height=\"23\" style=\"border-left-style: none; border-left-width: 1; border-top-style: none; border-top-width: 1\">\t\t\t\t\t\t\t<b>");
      out.print( pageCorepData.getWord("Show commission details from"));
      out.write("</b>\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t<td width=\"34\" ></td>\n");
      out.write("\t\t\t\t\t\t<td width=\"222\" style=\"border-top-style: none; border-top-width: 1\">\n");
      out.write("\t\t\t\t\t  <input type=\"text\" size=\"15\" onFocus=\"showCalendar('',this,this,'','id_fromDate',310,95,1);this.blur()\" name=\"fromDate\" id=\"fromDate\" value=\"\"/>\t\t</td>\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<td width=\"948\">&nbsp;<b>");
      out.print( pageCorepData.getWord("to"));
      out.write("</b>\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" size=\"15\" onFocus=\"showCalendar('',this,this,'','id_toDate',550,95,1);this.blur()\" name=\"toDate\" id=\"toDate\" value=\"\"/>\t\t\t\t\n");
      out.write("\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td align=\"right\" width=\"251\" height=\"23\" style=\"border-left-style: none; border-left-width: 1; border-top-style: none; border-top-width: 1\">\n");
      out.write("\t\t\t\t\t\t\t<b>");
      out.print( pageCorepData.getWord("Select an agent group"));
      out.write("</b>\n");
      out.write("\t\t\t\t\t  <input name=\"agtChoice\" type=\"radio\" value=\"agentGroup\" onClick=\"changeDisabled();\"></td>\n");
      out.write("\t\t\t\t\t\t<td width=\"34\" ></td>\n");
      out.write("\t\t\t\t\t\t<td width=\"222\" style=\"border-top-style: none; border-top-width: 1\">\n");
      out.write("\t\t\t\t\t\t<div id=\"listAgtGrp\" style=\"visibility:hidden\" >\n");
      out.write("\t\t\t\t\t\t\t<select  id=\"agtGrp\" name=\"agtGrp\" onChange=\"getAgentsInGroup(this, document.agentHours.objects, document.agentHours.viewckbox);\" class=\"contentText\" >\n");
      out.write("\t\t\t\t\t\t\t\t<option value=\"AllGroups\">- ");
      out.print( pageCorepData.getWord("Select a group"));
      out.write(" -</option>\n");
      out.write("\t\t\t\t\t\t\t</select>\t\t\n");
      out.write("\t\t\t\t\t  </div>\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t<td valign=\"middle\" >&nbsp;</td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td align=\"right\" width=\"251\" height=\"23\" style=\"border-left-style: none; border-left-width: 1; border-top-style: none; border-top-width: 1\">\n");
      out.write("\t\t\t\t\t\t\t<b>");
      out.print( pageCorepData.getWord("Select an agent"));
      out.write("</b>\n");
      out.write("\t\t\t\t\t  <input name=\"agtChoice\" type=\"radio\" value=\"agent\" onClick=\"changeDisabled()\" >\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t<td width=\"34\" ></td>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t<td colspan=\"2\" id=\"id_reportDate\" style=\"border-top-style: none; border-top-width: 1\">\n");
      out.write("\t\t\t\t\t\t\t\t<div id=\"listAgt\" style=\"visibility:hidden\">\n");
      out.write("\t\t\t\t\t\t\t\t<select  id=\"objects\" name=\"objects\" class=\"contentText\" onChange=\"getAgents(this)\" >\n");
      out.write("\t\t\t\t\t\t\t\t\t<option value=\"AllAgents\">- ");
      out.print( pageCorepData.getWord("Select an agent"));
      out.write(" -</option>\n");
      out.write("\t\t\t\t\t\t\t\t</select>\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"viewckbox\" onClick=\"javascript:changeAgentListView(document.agentHours.agtGrp, document.agentHours.objects, this);\" ID=\"Checkbox2\">\n");
      out.write("              \t\t\t\t\t <b>");
      out.print( pageCorepData.getWord("Show agent by ID"));
      out.write("</b>\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td width=\"251\" height=\"23\" style=\"border-left-style: none; border-left-width: 1; border-top-style: none; border-top-width: 1\">\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n");
      out.write("\t\t\t\t\t\t<td width=\"34\" ></td>\n");
      out.write("\t\t\t\t\t\t<td width=\"222\" style=\"border-top-style: none; border-top-width: 1\"></b>\t</td>\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<td width=\"948\">&nbsp;<input id=\"viewAgentsHours\"  name=\"viewAgentsHours\" type=\"button\"  value=\"");
      out.print( pageCorepData.getWord("View data"));
      out.write("\" onClick=\"extractAllData()\">\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");
 if((submitRequest != null) && submitRequest.compareTo("true") == 0) 
						{
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<!--<a href=\"javascript:openSaveFileWindow()\">Download the file</a>-->\n");
      out.write("\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t</td>\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t\t<td height=\"21\" colspan=\"4\">&nbsp;</td>\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t \t\t</table>\n");
      out.write("  \t\t\t</fieldset>\t\t\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t");

			if((submitRequest != null) && submitRequest.compareTo("true") == 0) 
			{
				sret = beanAgentCommission.getCommissionDetails(fromDate,toDate,objId, reqType);
				//beanAgentCommission.createReport(fromDate,toDate);
			 	java.util.Vector allDetails = new Vector();			 
			 	allDetails = beanAgentCommission.comDetails;				
				beanCommissionDetails agentData = new beanCommissionDetails();
				//String strToWrite ="";
			
      out.write("\n");
      out.write("\t\t\t\t<div  style=\"margin-right:20px \">\n");
      out.write("\t\t\t\t<table width=\"30%\" align=\"center\" >\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t<!--Requete pour l'agent group-->\n");
      out.write("\t\t\t\t");
 if (allDetails.size() >0  && reqType.compareTo("1") == 0 ) {
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td  class=\"reportsID\" width=\"20%\" align=\"center\">\n");
      out.write("\t\t\t\t\t<b><script>document.write(\"");
      out.print(pageCorepData.getWord("Commission details"));
      out.write(" \"); document.write(\"");
      out.print(pageCorepData.getWord("for"));
      out.write(" \")</script>");
      out.print(((beanCommissionDetails)allDetails.elementAt(0)).agent_group_name);
      out.write("</b></td></tr>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t <td  class=\"reportsID\" width=\"20%\" align=\"center\">\n");
      out.write("\t\t\t\t\t<b>");
      out.print(fromDate );
      out.print(pageCorepData.getWord("To"));
      out.write(' ');
      out.print(toDate);
      out.write("</b>  </td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr><td height=\"20\"></td></tr>\n");
      out.write("\t\t\t");
}// fin if (allDetails.size() >0 && reqType.compareTo("1") == 0 )				
				
			//Requete pour un agent
				if(allDetails.size() >0  && reqType.compareTo("2") == 0 ){
      out.write("\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t<td  class=\"reportsID\" width=\"20%\" align=\"center\">\n");
      out.write("\t\t\t\t\t<b><script>document.write(\"");
      out.print(pageCorepData.getWord("Commission details"));
      out.write(" \"); document.write(\"");
      out.print(pageCorepData.getWord("for"));
      out.write(" \")</script>");
      out.print(((beanCommissionDetails)allDetails.elementAt(0)).agent_name);
      out.write("</b></td></tr>\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t <td  class=\"reportsID\" width=\"20%\" align=\"center\">\n");
      out.write("\t\t\t\t\t<b>");
      out.print(fromDate );
      out.print(pageCorepData.getWord("To"));
      out.write(' ');
      out.print(toDate);
      out.write("</b>  </td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t<tr><td height=\"20\"></td></tr>\t\t\t\t\t\t\n");
      out.write("\t\t\t\t");
} // fin if (allDetails.size() >0 && reqType.compareTo("2") == 0 ) 
      out.write("\n");
      out.write("\t\t\t\t</table>\t\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t<!--Debut affichage details pour l'objet choisi-->\n");
      out.write("\t\t\t\t<table border=\"1\" class=\"reportsTabName\" style=\"border-collapse:collapse \" bordercolor=\"#CCCCCC\">\n");
      out.write("\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t");
 if (reqType.compareTo("1") == 0) { // pour agent group
      out.write("\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"100\"><b>");
      out.print(pageCorepData.getWord("Agent ID"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"200\"><b>");
      out.print(pageCorepData.getWord("Last name"));
      out.write(',');
      out.write(' ');
      out.print(pageCorepData.getWord("First name"));
      out.write("</b></td>\t");
}
      out.write("\n");
      out.write("\t\t\t\t\t");
 if (reqType.compareTo("2") == 0) { //pour un agent
      out.write("\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"110\"><b>");
      out.print(pageCorepData.getWord("Group ID"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"150\"><b>");
      out.print(pageCorepData.getWord("Group name"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t");
}
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"100\"><b>");
      out.print(pageCorepData.getWord("Agent sales"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"100\"><b>");
      out.print(pageCorepData.getWord("Group sales"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"125\"><b>");
      out.print(pageCorepData.getWord("Agent hours"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"125\"><b>");
      out.print(pageCorepData.getWord("Group hours"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"125\"><b>");
      out.print(pageCorepData.getWord("Calculation base"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"130\"><b>");
      out.print(pageCorepData.getWord("Total commission"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"130\"><b>");
      out.print(pageCorepData.getWord("Commission per hour"));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t<td align=\"center\" width=\"200\"><b>");
      out.print(pageCorepData.getWord("Commission details"));
      out.write("</b></td>\n");
      out.write("\t\t\t \t</tr>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t</table>\n");
      out.write("\t\t\t\t</div>\t\t\n");
      out.write("\t\t\t");

				/*strToWrite = "Agent ID;Last name-First name;Group ID;Group name;Agent sales;Group sales;Agent hours;Group hours;Calculation base;Total commission;Commission details\n";*/
				if(	allDetails.size() >0)
				{
					int tot_agent_sales =0 , tot_grp_sales =0;
					float tot_agent_hours =0, tot_grp_hours = 0, tot_commission =0 ,commission_per_hrs=0,tot_commission_per_hrs=0;
					
					
					
      out.write("\n");
      out.write("\t\t\t\t\t<div id=\"tabDailyHours\"  style=\"overflow:scroll; height:500px\"> \n");
      out.write("\t\t\t\t\t<table border=\"0\">\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t");
		
					for(int i = 0; i < allDetails.size(); i++)
					{						
						agentData = (beanCommissionDetails)allDetails.elementAt(i);		
						if(agentData.agent_hours>0)
							commission_per_hrs=	agentData.total_commission_value/agentData.agent_hours;
												
						if(i%2 ==0) {
					  	
      out.write("\n");
      out.write("\t\t\t\t\t  \t\t<tr class=\"reportsRowPair\" bordercolor=\"#CCCCCC\" style=\"border-collapse:collapse \">\n");
      out.write("\t\t\t\t\t  \t");

					  	} else {
					  	
      out.write("\n");
      out.write("\t\t\t\t  \t  \t<tr class=\"reportsRowUnPair\" bordercolor=\"#CCCCCC\" style=\"border-collapse:collapse \">\n");
      out.write("                     \t");

					 	}
					 	
      out.write("\t  \n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");
if (reqType.compareTo("1") == 0) {
      out.write(" \n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"100\"><b>");
      out.print(agentData.agent_id);
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"200\"><b>");
      out.print(agentData.agent_name);
      out.write("</b></td>");
}
      out.write("\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");
if (reqType.compareTo("2") == 0) {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"110\"><b>");
      out.print(agentData.agent_group_id);
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"150\"><b>");
      out.print(agentData.agent_group_name);
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t");

						 // Cumul pour les != agent group dont fait partie l'agent
						 tot_grp_hours += agentData.group_hours;
						 tot_grp_sales += agentData.group_sales;
						 }
      out.write("\t\t\t\t\t\t\t \n");
      out.write("\t\t\t\t\t\t \t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"100\"><b>");
      out.print(agentData.agent_sales);
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");
if(agentData.calculationBase.compareTo("Group-based")==0){
      out.write("\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"100\"><b>");
      out.print(agentData.group_sales);
      out.write("</b></td>");
 }
						 else {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"99\"><b> - </b></td>\t ");
 }
      out.write("\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"125\"><b>");
      out.print(Double.toString( (Math.round(agentData.agent_hours*100))/100.0));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t");
if(agentData.calculationBase.compareTo("Group-based")==0) {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"125\"><b>");
      out.print(Double.toString( (Math.round(agentData.group_hours*100))/100.0));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t");
} 
						else {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"125\"><b> - </b></td> ");
 }
      out.write("\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"125\"><b>");
      out.print(agentData.commission_base);
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"130\"><b>");
      out.print(Double.toString( (Math.round(agentData.total_commission_value*100))/100.0));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"130\"><b>");
      out.print(Double.toString( (Math.round(commission_per_hrs*100))/100.0));
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t\t<td align=\"center\" width=\"200\"><b>");
      out.print(agentData.calculationBase);
      out.write("</b></td>\n");
      out.write("\t\t\t\t\t  \t</tr>   \n");
      out.write("\t\t\t");
 		
					// Cumul pour les 2 requetes
					tot_agent_sales += agentData.agent_sales ;
					tot_agent_hours +=agentData.agent_hours;
					tot_commission +=agentData.total_commission_value;
					
					//CSV file content
					/*strToWrite += agentData.agent_id +";"+ agentData.agent_name +";"+ agentData.agent_group_id+";"+agentData.agent_group_name+";"+
					agentData.agent_sales+";"+agentData.group_sales+";"+agentData.agent_hours+";"+agentData.group_hours+";"+
					agentData.calculationBase+";"+agentData.total_commission_value+"\n ";*/
					
					}// fin for		
					tot_commission_per_hrs = tot_commission/tot_agent_hours;	
					
      out.write("\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t<!--Affichage du total-->\n");
      out.write("\t\t\t\t\t<tr>\n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b>");
      out.print(pageCorepData.getWord("Total"));
      out.write("</b></font></td>\t\t\t\t\t  \n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b> </b></font></td>\n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b>");
      out.print(tot_agent_sales);
      out.write(" </b></font></td>\n");
      out.write("\t\t\t\t\t  \n");
      out.write("\t\t\t\t\t  <!--Group sales-->\n");
      out.write("\t\t\t\t\t  ");
if(agentData.calculationBase.compareTo("Group-based")==0){
      out.write("\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"#FFECF5\" align=\"center\"> <b>");
      out.print(agentData.group_sales);
      out.write("</b></font></td>");
 } 
						else if(reqType.compareTo("2") == 0) {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"#FFECF5\" align=\"center\"> <b>");
      out.print(tot_grp_sales);
      out.write("</b></font></td>\t");
}
						else {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"#FFECF5\" align=\"center\"><b> - </b></td>");
 }
      out.write("\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b>");
      out.print(Double.toString( (Math.round(tot_agent_hours*100))/100.0));
      out.write(" </b></font></td>\n");
      out.write("\t\t\t\t\t  \n");
      out.write("\t\t\t\t\t  <!--Group hours-->\n");
      out.write("\t\t\t\t\t  ");
if(agentData.calculationBase.compareTo("Group-based")==0) {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"#FFECF5\" align=\"center\"><b>");
      out.print(Double.toString( (Math.round(agentData.group_hours*100))/100.0));
      out.write("</b></td>");
 } 
						else if(reqType.compareTo("2") == 0) {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"#FFECF5\" align=\"center\"><b>");
      out.print(Double.toString( (Math.round(tot_grp_hours*100))/100.0));
      out.write("</b></td>");
}
						else {
      out.write("\n");
      out.write("\t\t\t\t\t\t<td bgcolor=\"#FFECF5\" align=\"center\"><b> - </b></td> ");
 }
      out.write("\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t\t\n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b> </b></font></td>\n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b>");
      out.print(Double.toString( (Math.round(tot_commission*100))/100.0));
      out.write(" </b></font></td>\n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b>");
      out.print(Double.toString( (Math.round(tot_commission_per_hrs*100))/100.0));
      out.write(" </b></font></td>\n");
      out.write("\t\t\t\t\t  <td bgcolor=\"#FFECF5\" align=\"center\"> <b> </b></font></td>\n");
      out.write("\t\t\t\t\t</tr>\n");
      out.write("\t\t\t\t\t</table>\n");
      out.write("\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t");

					
				} // fin if( allDetails.size() >0)
				// Creation du fichier Excell commissionReport.cvs
				//String strPath = "../webapps/aheevaccs/Manager/Resources_pages/Exceptions.csv";				
				
				/*String strPath="../webapps/aheevaccs/Manager/commissionReport.xls";
				File strFile = new File(strPath);
				FileWriter myWriter = new FileWriter(strFile);
				BufferedWriter objWriter = new BufferedWriter(myWriter);	
				objWriter.write(strToWrite);	
				objWriter.flush();	
				objWriter.close();*/
				
				//beanFile.doSave("../logs/commissionReport.xls");		
				
      out.write("\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<!--<iframe id=\"SaveFrame\" style=\"display:none\"></iframe> \n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\t<script> \t\t\t\t\n");
      out.write("\t\t\t\tfunction SaveVarAsFile(){ \t\t\t\t\n");
      out.write("\t\t\t\t  SaveFrame.document.open(\"csv\",\"replace\")\n");
      out.write("\t\t\t\t  SaveFrame.document.write(\"mettre;le;contenu;ici;\")\n");
      out.write("\t\t\t\t  SaveFrame.document.close()\n");
      out.write("\t\t\t\t  SaveFrame.focus()\n");
      out.write("\t\t\t\t  SaveFrame.document.execCommand('SaveAs',false,\"ddd.csv\")\n");
      out.write("\t\t\t\t} \n");
      out.write("\t\t\t\t</script>-->\n");
      out.write("\t\t\t\t");
				
			}// fin if((submitRequest != null) && submitRequest.compareTo("true") == 0) 
      out.write("\n");
      out.write("\t\n");
      out.write("</div>\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
 pageCorepData.closeConnection(); 
      out.write("\n");
      out.write(" \n");
      out.write("\n");
      out.write("\t\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      if (_jspxFactory != null) _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
